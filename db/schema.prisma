generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model car {
  id            Int           @id @default(autoincrement())
  client        client        @relation(fields: [client_id], references: [id])
  client_id     Int
  car_make      String        @db.VarChar(150)
  car_year      String        @db.VarChar(150)
  car_model     String        @db.VarChar(150)
  car_trim      String        @db.VarChar(150)
  car_plate     String        @db.VarChar(20)
  created_at    DateTime      @default(now()) @db.DateTime(0)
  updated_at    DateTime      @default(now()) @updatedAt @db.DateTime(0)
  deleted_at    DateTime?
}

model client {
  id            Int           @id @default(autoincrement())
  user          user?         @relation(fields: [user_id], references: [id])
  user_id       Int?          @unique
  dni           String        @unique @db.VarChar(20)
  phone         String        @db.VarChar(20)
  cars          car[]
  debts         debt[]
  created_at    DateTime      @default(now()) @db.DateTime(0)
  updated_at    DateTime      @default(now()) @updatedAt @db.DateTime(0)
  deleted_at    DateTime?
}

model debt {
  id                    Int                 @id @default(autoincrement())
  client                client              @relation(fields: [client_id], references: [id])
  client_id             Int
  terms_conditions      String              @db.VarChar(1)
  estimated_debt        Float               @db.Float
  date_appointment      DateTime            @db.Date
  adviser               user?               @relation(fields: [adviser_id], references: [id])
  adviser_id            Int?
  history_steps         history_steps[]
  proposed_amount       Float               @db.Float
  accept_offer          String              @db.VarChar(1)
  accept_stellantis     String              @db.VarChar(1)
  created_at            DateTime            @default(now()) @db.DateTime(0)
  updated_at            DateTime            @default(now()) @updatedAt @db.DateTime(0)
  deleted_at            DateTime?
}

model history_steps {
  id                Int           @id @default(autoincrement())
  debt              debt          @relation(fields: [debt_id], references: [id])
  debt_id           Int
  step              String        @db.VarChar(150)
  description       String        @db.Text
  value             String        @db.VarChar(150)
  created_at        DateTime      @default(now()) @db.DateTime(0)
  updated_at        DateTime      @default(now()) @updatedAt @db.DateTime(0)
  deleted_at        DateTime?
}

model user {
  id                  Int           @id @default(autoincrement())
  client_profile      client?
  debts               debt[]
  name                String        @db.VarChar(255)
  lastname            String        @db.VarChar(255)
  email               String        @unique @db.VarChar(255)
  role                String        @db.VarChar(255)
  cms_user_id         String?       @db.VarChar(255)
  password            String        @db.VarChar(255)
  recovery_token      String?       @db.VarChar(255)
  refresh_token       String?       @db.VarChar(255)
  first_logged_in     Boolean       @default(false)
  created_at          DateTime      @default(now()) @db.DateTime(0)
  updated_at          DateTime      @default(now()) @updatedAt @db.DateTime(0)
  deleted_at          DateTime?
}
